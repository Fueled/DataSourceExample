// Generated by Apple Swift version 1.2 (swiftlang-602.0.53.1 clang-602.0.53)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if defined(__has_include) && __has_include(<uchar.h>)
# include <uchar.h>
#elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
#endif

typedef struct _NSZone NSZone;

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted) 
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
#endif
#if __has_feature(nullability)
#  define SWIFT_NULLABILITY(X) X
#else
# if !defined(__nonnull)
#  define __nonnull
# endif
# if !defined(__nullable)
#  define __nullable
# endif
# if !defined(__null_unspecified)
#  define __null_unspecified
# endif
#  define SWIFT_NULLABILITY(X)
#endif
#if defined(__has_feature) && __has_feature(modules)
@import UIKit;
@import CoreGraphics;
@import ObjectiveC;
@import Foundation;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class NSCoder;

SWIFT_CLASS("_TtC10DataSource18CollectionViewCell")
@interface CollectionViewCell : UICollectionViewCell
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UICollectionView;
@class NSIndexPath;
@class UICollectionReusableView;

SWIFT_CLASS("_TtC10DataSource24CollectionViewDataSource")
@interface CollectionViewDataSource : NSObject <UICollectionViewDataSource>
@property (nonatomic) IBOutlet UICollectionView * __nullable collectionView;
- (SWIFT_NULLABILITY(nonnull) instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView * __nonnull)collectionView;
- (NSInteger)collectionView:(UICollectionView * __nonnull)collectionView numberOfItemsInSection:(NSInteger)section;
- (UICollectionReusableView * __nonnull)collectionView:(UICollectionView * __nonnull)collectionView viewForSupplementaryElementOfKind:(NSString * __nonnull)kind atIndexPath:(NSIndexPath * __nonnull)indexPath;
- (UICollectionViewCell * __nonnull)collectionView:(UICollectionView * __nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * __nonnull)indexPath;
@end


SWIFT_CLASS("_TtC10DataSource26CollectionViewReusableView")
@interface CollectionViewReusableView : UICollectionReusableView
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10DataSource13KVODataSource")
@interface KVODataSource : NSObject
@property (nonatomic, readonly) NSObject * __nonnull target;
@property (nonatomic, readonly, copy) NSString * __nonnull keyPath;
@property (nonatomic, readonly) NSInteger numberOfSections;
- (NSInteger)numberOfItemsInSection:(NSInteger)section;
- (void)observeValueForKeyPath:(NSString * __nonnull)keyPath ofObject:(id __nonnull)object change:(NSDictionary * __nonnull)change context:(void * __null_unspecified)context;
@end


@interface NSIndexSet (SWIFT_EXTENSION(DataSource))
- (NSIndexSet * __nonnull)ds_map:(NSInteger (^ __nonnull)(NSInteger))transform;
@end


SWIFT_CLASS("_TtC10DataSource13TableViewCell")
@interface TableViewCell : UITableViewCell
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * __nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UITableView;

SWIFT_CLASS("_TtC10DataSource19TableViewDataSource")
@interface TableViewDataSource : NSObject <UITableViewDataSource>
@property (nonatomic) IBOutlet UITableView * __nullable tableView;
- (SWIFT_NULLABILITY(nonnull) instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (NSInteger)numberOfSectionsInTableView:(UITableView * __nonnull)tableView;
- (NSInteger)tableView:(UITableView * __nonnull)tableView numberOfRowsInSection:(NSInteger)section;
- (UITableViewCell * __nonnull)tableView:(UITableView * __nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * __nonnull)indexPath;
@end


SWIFT_CLASS("_TtC10DataSource41TableViewDataSourceWithHeaderFooterTitles")
@interface TableViewDataSourceWithHeaderFooterTitles : TableViewDataSource
- (NSString * __nullable)tableView:(UITableView * __nonnull)tableView titleForHeaderInSection:(NSInteger)section;
- (NSString * __nullable)tableView:(UITableView * __nonnull)tableView titleForFooterInSection:(NSInteger)section;
- (SWIFT_NULLABILITY(nonnull) instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIView;

SWIFT_CLASS("_TtC10DataSource40TableViewDataSourceWithHeaderFooterViews")
@interface TableViewDataSourceWithHeaderFooterViews : TableViewDataSource <UITableViewDelegate>
- (UIView * __nullable)tableView:(UITableView * __nonnull)tableView viewForHeaderInSection:(NSInteger)section;
- (UIView * __nullable)tableView:(UITableView * __nonnull)tableView viewForFooterInSection:(NSInteger)section;
- (SWIFT_NULLABILITY(nonnull) instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10DataSource25TableViewHeaderFooterView")
@interface TableViewHeaderFooterView : UITableViewHeaderFooterView
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithReuseIdentifier:(NSString * __nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@interface UICollectionView (SWIFT_EXTENSION(DataSource))
- (void)ds_performBatchChanges:(void (^ __nonnull)(void))batchChanges;
- (void)ds_deleteItemsAtIndexPaths:(NSArray * __nonnull)indexPaths;
- (void)ds_deleteSections:(NSIndexSet * __nonnull)sections;
- (void)ds_insertItemsAtIndexPaths:(NSArray * __nonnull)indexPaths;
- (void)ds_insertSections:(NSIndexSet * __nonnull)sections;
- (void)ds_moveItemAtIndexPath:(NSIndexPath * __nonnull)oldIndexPath toIndexPath:(NSIndexPath * __nonnull)newIndexPath;
- (void)ds_moveSection:(NSInteger)oldSection toSection:(NSInteger)newSection;
- (void)ds_reloadData;
- (void)ds_reloadItemsAtIndexPaths:(NSArray * __nonnull)indexPaths;
- (void)ds_reloadSections:(NSIndexSet * __nonnull)sections;
@end


@interface UITableView (SWIFT_EXTENSION(DataSource))
- (void)ds_performBatchChanges:(void (^ __nonnull)(void))batchChanges;
- (void)ds_deleteItemsAtIndexPaths:(NSArray * __nonnull)indexPaths;
- (void)ds_deleteSections:(NSIndexSet * __nonnull)sections;
- (void)ds_insertItemsAtIndexPaths:(NSArray * __nonnull)indexPaths;
- (void)ds_insertSections:(NSIndexSet * __nonnull)sections;
- (void)ds_moveItemAtIndexPath:(NSIndexPath * __nonnull)oldIndexPath toIndexPath:(NSIndexPath * __nonnull)newIndexPath;
- (void)ds_moveSection:(NSInteger)oldSection toSection:(NSInteger)newSection;
- (void)ds_reloadData;
- (void)ds_reloadItemsAtIndexPaths:(NSArray * __nonnull)indexPaths;
- (void)ds_reloadSections:(NSIndexSet * __nonnull)sections;
@end

#pragma clang diagnostic pop
